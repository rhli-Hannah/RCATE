% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rcate.ml.R
\name{rcate.ml}
\alias{rcate.ml}
\title{Robust estimation of treatment effect.}
\usage{
rcate.ml(
  x,
  y,
  d,
  method = "MCMEA",
  algorithm = "GBM",
  n.trees.p = 40000,
  shrinkage.p = 0.005,
  n.minobsinnode.p = 10,
  interaction.depth.p = 1,
  cv.p = 5,
  n.trees.mu = c(1:50) * 50,
  shrinkage.mu = 0.01,
  n.minobsinnode.mu = 5,
  interaction.depth.mu = 5,
  cv.mu = 5,
  n.trees.gbm = 1000,
  interaction.depth.gbm = 2,
  n.cells.nn = NA,
  dropout.nn = NA,
  epochs.nn = 100
)
}
\arguments{
\item{x}{matrix or a data frame of predictors.}

\item{y}{vector of response values.}

\item{d}{vector of binary treatment assignment (0 or 1).}

\item{method}{character string of CATE estimation method: "MCMEA" - modified co-variate
method with efficiency augmentation, "RL" - R-learning, or "DR" - doubly robust method.}

\item{algorithm}{character string of algorithm: "GBM" - gradient boosting machine or
"NN" - neural network. The random forests is available in rcate.rf.}

\item{n.trees.p}{tuning parameter the number of trees used for estimating propensity score
with GBM. the default value is 40000.}

\item{shrinkage.p}{tuning parameter the shrinkage level for estimating propensity score
with GBM. the default value is 0.005.}

\item{n.minobsinnode.p}{tuning parameter the minimum node size for estimating propensity score
with GBM. the default value is 10.}

\item{interaction.depth.p}{tuning parameter the number of interactions for estimating propensity
score with GBM. the default value is 1.}

\item{cv.p}{tuning parameter the number of folds in cross-validation for estimating propensity
score with GBM. the default value is 2.}

\item{n.trees.mu}{scalar or vector of the number of trees for estimating mean function with GBM.
The default is (1:50)*50.}

\item{shrinkage.mu}{tuning parameter the shrinkage level for estimating mean function
with GBM. the default value is 0.01.}

\item{n.minobsinnode.mu}{tuning parameter the minimum node size for estimating mean function
with GBM. the default value is 10.}

\item{interaction.depth.mu}{tuning parameter the number of interactions for estimating mean
function with GBM. the default value is 5.}

\item{cv.mu}{tuning parameter the folds for cross-validation for estimating mean function with
GBM. The default value is 5.}

\item{n.trees.gbm}{tuning parameter the number of trees used in GBM for estimating treatment
effect function if algorithm="GBM". The default is 1000.}

\item{interaction.depth.gbm}{tuning parameter the number of interactions for estimating treatment
effect function if algorithm="GBM". The default value is 2.}

\item{n.cells.nn}{vector of the number of neurals in each hidden layer if algorithm='NN'.
The default is two layers with each layer the half size of previous layer.}

\item{dropout.nn}{vector of the dropout rate of each hidden layer if algorithm='NN'.
The default is no dropout.}

\item{epochs.nn}{scalar of the number of epochs for neural network if algorithm='NN'.
The defualt is 100.}
}
\value{
a list of components
\itemize{
 \item model - the robust estimation model of CATE.
 \item method - estimation method.
 \item algorithm - fitting algorithm.
 \item fitted.values - vector of fitted values.
 \item x - matrix of predictors.
 \item y - vector of response values.
 \item d - vector of treatment assignment.
 \item n.trees.gbm - number of trees for estimating treatment effect function if algorithm='GBM'.
 }
}
\description{
\code{rcate.ml} fit ML algorithm for robust treatment effect estimation.
}
\details{
Fit a GBM or NN to estimate treatment effect estimation that robust to outliers.
}
\examples{
n <- 1000; p <- 10
X <- matrix(rnorm(n*p,0,1),nrow=n,ncol=p)
tau = 6*sin(2*X[,1])+3*(X[,2]+3)*X[,3]+9*tanh(0.5*X[,4])+3*X[,5]*(2*I(X[,4]<1)-1)
p = 1/(1+exp(-X[,1]+X[,2]))
d = rbinom(n,1,p)
t = 2*d-1
y = 100+4*X[,1]+X[,2]-3*X[,3]+tau*t/2 + rnorm(n,0,1)
x_val = matrix(rnorm(200*5,0,1),nrow=200,ncol=10)
tau_val = 6*sin(2*x_val[,1])+3*(x_val[,2]+3)*x_val[,3]+9*tanh(0.5*x_val[,4])+
3*x_val[,5]*(2*I(x_val[,4]<1)-1)
# Use MCM-EA transformation and GBM to estimate CATE
fit <- rcate.ml(X,y,d,method='RL')
y_pred <- predict(fit,x_val)$predict
plot(tau_val,y_pred);abline(0,1)
}
